<?xml version="1.0"?>
<!-- -->
<launch>
  <!-- Deprecated: use "roslaunch rtabmap_launch rtambap.launch" instead -->

  <!-- Choose between depth and stereo, set both to false to do only scan -->
  <arg name="stereo"                    default="false"/>
  <arg     if="$(arg stereo)" name="depth"  default="false"/>
  <arg unless="$(arg stereo)" name="depth"  default="true"/>
  <arg name="subscribe_rgb"  default="$(arg depth)"/>

  <!-- Choose visualization -->
  <arg name="rtabmap_viz"             default="false" />
  <arg name="rtabmapviz"              default="$(arg rtabmap_viz)" /> <!-- deprecated, use rtabmap_viz -->
  <arg name="rviz"                    default="false" />

  <!-- Localization-only mode -->
  <arg name="localization"            default="false"/>
  <arg name="initial_pose"            default=""/>             <!-- Format: "x y z roll pitch yaw" or "x y z qx qy qz qw". Default: see "RGBD/StartAtOrigin" doc -->

  <!-- sim time for convenience, if playing a rosbag -->
  <arg name="use_sim_time"            default="false"/>
  <param if="$(arg use_sim_time)" name="use_sim_time" value="true"/>

  <!-- Corresponding config files -->
  <arg name="cfg"                     default="" /> <!-- To change RTAB-Map's parameters, set the path of config file (*.ini) generated by the standalone app -->
  <arg name="gui_cfg"                 default="~/.ros/rtabmap_gui.ini" />
  <arg name="rviz_cfg"                default="$(find rtabmap_launch)/launch/config/rgbd.rviz" />

  <arg name="frame_id"                default="camera_link"/>     <!-- Fixed frame id, you may set "base_link" or "base_footprint" if they are published -->
  <arg name="odom_frame_id"           default=""/>                <!-- If set, TF is used to get odometry instead of the topic -->
  <arg name="odom_frame_id_init"      default=""/>                <!-- If set, TF map->odom is published even if no odometry topic has been received yet. The frame id should match the one in the topic. -->
  <arg name="map_frame_id"            default="map"/>
  <arg name="ground_truth_frame_id"   default=""/>     <!-- e.g., "world" -->
  <arg name="ground_truth_base_frame_id" default=""/>  <!-- e.g., "tracker", a fake frame matching the frame "frame_id" (but on different TF tree) -->
  <arg name="namespace"               default="rtabmap"/>
  <arg name="database_path"           default="~/.ros/rtabmap.db"/>
  <arg name="queue_size"              default="10"/>
  <arg name="wait_for_transform"      default="0.2"/>
  <arg name="args"                    default="false"/>              <!-- delete_db_on_start, udebug -->
  <arg name="rtabmap_args"            default="$(arg args)"/>   <!-- deprecated, use "args" argument -->
  <arg name="gdb"                     default="false"/>         <!-- Launch nodes in gdb for debugging (apt install xterm gdb) -->
  <arg     if="$(arg gdb)" name="launch_prefix" default="xterm -e gdb -q -ex run --args"/>
  <arg unless="$(arg gdb)" name="launch_prefix" default=""/>
  <arg name="clear_params"            default="true"/>
  <arg name="output"                  default="screen"/>        <!-- Control node output (screen or log) -->
  <arg name="publish_tf_map"          default="true"/>

  <!-- if timestamps of the input topics are synchronized using approximate or exact time policy-->
  <arg     if="$(arg stereo)" name="approx_sync"  default="false"/>
  <arg unless="$(arg stereo)" name="approx_sync"  default="$(arg depth)"/>
  <arg name="approx_sync_max_interval"  default="0"/> <!-- (sec) 0 means infinite interval duration (used with approx_sync=true) -->

  <!-- RGB-D related topics -->
  <arg name="rgb_topic"               default="/camera/color/image_raw" />
  <arg name="depth_topic"             default="/camera/depth/image_raw" />
  <arg name="camera_info_topic"       default="/camera/color/camera_info" />
  <arg name="depth_camera_info_topic" default="$(arg camera_info_topic)" />

  <!-- stereo related topics -->
  <arg name="stereo_namespace"        default="/stereo_camera"/>
  <arg name="left_image_topic"        default="$(arg stereo_namespace)/left/image_rect_color" />
  <arg name="right_image_topic"       default="$(arg stereo_namespace)/right/image_rect" />      <!-- using grayscale image for efficiency -->
  <arg name="left_camera_info_topic"  default="$(arg stereo_namespace)/left/camera_info" />
  <arg name="right_camera_info_topic" default="$(arg stereo_namespace)/right/camera_info" />

  <!-- Already synchronized RGB-D related topic, with rtabmap_sync/rgbd_sync nodelet -->
  <arg name="rgbd_sync"               default="false"/>         <!-- pre-sync rgb_topic, depth_topic, camera_info_topic -->
  <arg name="approx_rgbd_sync"        default="true"/>          <!-- false=exact synchronization -->
  <arg name="subscribe_rgbd"          default="$(arg rgbd_sync)"/>
  <arg name="rgbd_topic"              default="rgbd_image" />
  <arg name="depth_scale"             default="1.0" />         <!-- Deprecated, use rgbd_depth_scale instead -->
  <arg name="rgbd_depth_scale"        default="$(arg depth_scale)" />
  <arg name="rgbd_decimation"         default="1" />

  <arg name="compressed"              default="false"/>         <!-- If you want to subscribe to compressed image topics -->
  <arg name="rgb_image_transport"     default="compressed"/>    <!-- Common types: compressed, theora (see "rosrun image_transport list_transports") -->
  <arg name="depth_image_transport"   default="compressedDepth"/>  <!-- Depth compatible types: compressedDepth (see "rosrun image_transport list_transports") -->

  <arg name="gen_cloud"               default="false"/> <!-- only works with depth image and if not subscribing to scan_cloud topic-->
  <arg name="gen_cloud_decimation"    default="4"/>
  <arg name="gen_cloud_voxel"         default="0.05"/>

  <arg name="subscribe_scan"          default="false"/>
  <arg name="scan_topic"              default="/scan"/>
  <arg name="subscribe_scan_cloud"    default="$(arg gen_cloud)"/>
  <arg name="scan_cloud_topic"        default="/scan_cloud"/>
  <arg name="subscribe_scan_descriptor" default="false"/>
  <arg name="scan_descriptor_topic"   default="/scan_descriptor"/>
  <arg name="scan_deskewing"          default="false"/>
  <arg name="scan_deskewing_slerp"    default="false"/>
  <arg name="scan_cloud_max_points"   default="0"/>
  <arg name="scan_cloud_filtered"     default="$(arg scan_deskewing)"/> <!-- use filtered cloud from icp_odometry for mapping -->
  <arg name="gen_scan"                default="false"/> <!-- only works with depth image and if not subscribing to scan topic-->

  <arg name="gen_depth"                  default="false" /> <!-- Generate depth image from scan_cloud -->
  <arg name="gen_depth_decimation"       default="1" />
  <arg name="gen_depth_fill_holes_size"  default="0" />
  <arg name="gen_depth_fill_iterations"  default="1" />
  <arg name="gen_depth_fill_holes_error" default="0.1" />

  <arg name="visual_odometry"          default="true"/>          <!-- Launch rtabmap visual odometry node -->
  <arg name="icp_odometry"             default="false"/>         <!-- Launch rtabmap icp odometry node -->
  <arg name="odom_topic"               default="odom"/>          <!-- Odometry topic name -->
  <arg name="vo_frame_id"              default="$(arg odom_topic)"/> <!-- Visual/Icp odometry frame ID for TF -->
  <arg name="publish_tf_odom"          default="true"/>
  <arg name="odom_tf_angular_variance" default="0.001"/>         <!-- If TF is used to get odometry, this is the default angular variance -->
  <arg name="odom_tf_linear_variance"  default="0.001"/>         <!-- If TF is used to get odometry, this is the default linear variance -->
  <arg name="odom_args"                default=""/>              <!-- More arguments for odometry (overwrite same parameters in rtabmap_args) -->
  <arg name="odom_sensor_sync"         default="false"/>
  <arg name="odom_guess_frame_id"        default=""/>
  <arg name="odom_guess_min_translation" default="0"/>
  <arg name="odom_guess_min_rotation"    default="0"/>
  <arg name="odom_max_rate"            default="0"/>
  <arg name="odom_expected_rate"       default="0"/>
  <arg name="imu_topic"                default="/imu/data"/>          <!-- only used with VIO approaches -->
  <arg name="wait_imu_to_init"         default="false"/>
  <arg name="use_odom_features"        default="false"/>

  <arg name="scan_cloud_assembling"              default="false"/>
  <arg name="scan_cloud_assembling_time"         default="1"/>      <!-- max_clouds and time should not be set at the same time -->
  <arg name="scan_cloud_assembling_max_clouds"   default="0"/>      <!-- max_clouds and time should not be set at the same time -->
  <arg name="scan_cloud_assembling_fixed_frame"  default=""/>
  <arg name="scan_cloud_assembling_voxel_size"   default="0.05"/>
  <arg name="scan_cloud_assembling_range_min"    default="0.0"/>    <!-- 0=disabled -->
  <arg name="scan_cloud_assembling_range_max"    default="0.0"/>    <!-- 0=disabled -->
  <arg name="scan_cloud_assembling_noise_radius"   default="0.0"/>    <!-- 0=disabled -->
  <arg name="scan_cloud_assembling_noise_min_neighbors"   default="5"/>

  <arg name="subscribe_user_data"      default="false"/>             <!-- user data synchronized subscription -->
  <arg name="user_data_topic"          default="/user_data"/>
  <arg name="user_data_async_topic"    default="/user_data_async" /> <!-- user data async subscription (rate should be lower than map update rate) -->

  <arg name="gps_topic"                default="/gps/fix" />         <!-- gps async subscription -->

  <arg name="tag_topic"                default="/tag_detections" />  <!-- apriltags async subscription -->
  <arg name="tag_linear_variance"      default="0.0001" />
  <arg name="tag_angular_variance"     default="9999" />             <!-- >=9999 means ignore rotation in optimization, when rotation estimation of the tag is not reliable -->
  <arg name="fiducial_topic"           default="/fiducial_transforms" />  <!-- aruco_detect async subscription, use tag_linear_variance and tag_angular_variance to set covriance -->

  <!-- These arguments should not be modified directly, see referred topics without "_relay" suffix above -->
  <arg if="$(arg compressed)"     name="rgb_topic_relay"           default="$(arg rgb_topic)_relay"/>
  <arg unless="$(arg compressed)" name="rgb_topic_relay"           default="$(arg rgb_topic)"/>
  <arg if="$(arg compressed)"     name="depth_topic_relay"         default="$(arg depth_topic)_relay"/>
  <arg unless="$(arg compressed)" name="depth_topic_relay"         default="$(arg depth_topic)"/>
  <arg if="$(arg compressed)"     name="left_image_topic_relay"    default="$(arg left_image_topic)_relay"/>
  <arg unless="$(arg compressed)" name="left_image_topic_relay"    default="$(arg left_image_topic)"/>
  <arg if="$(arg compressed)"     name="right_image_topic_relay"   default="$(arg right_image_topic)_relay"/>
  <arg unless="$(arg compressed)" name="right_image_topic_relay"   default="$(arg right_image_topic)"/>
  <arg if="$(arg rgbd_sync)"      name="rgbd_topic_relay"          default="$(arg rgbd_topic)"/>
  <arg unless="$(arg rgbd_sync)"  name="rgbd_topic_relay"          default="$(arg rgbd_topic)_relay"/>

  <include file="$(find rtabmap_ros)/launch/rtabmap.launch">
    <arg name="stereo"         value="$(arg stereo)"/>
    <arg name="depth"          value="$(arg depth)"/>
    <arg name="subscribe_rgb"  value="$(arg subscribe_rgb)"/>

    <arg name="rtabmap_viz"    value="$(arg rtabmapviz)" />
    <arg name="rviz"           value="$(arg rviz)" />

    <arg name="localization"            value="$(arg localization)"/>
    <arg name="initial_pose"            value="$(arg initial_pose)"/>

    <arg name="use_sim_time"            value="$(arg use_sim_time)"/>

    <arg name="cfg"                     value="$(arg cfg)" />
    <arg name="gui_cfg"                 value="$(arg gui_cfg)" />
    <arg name="rviz_cfg"                value="$(arg rviz_cfg)" />

  <arg name="frame_id"                value="$(arg frame_id)"/>
  <arg name="odom_frame_id"           value="$(arg odom_frame_id)"/>
  <arg name="odom_frame_id_init"      value="$(arg odom_frame_id_init)"/>
  <arg name="map_frame_id"            value="$(arg map_frame_id)"/>
  <arg name="ground_truth_frame_id"   value="$(arg ground_truth_frame_id)"/>
  <arg name="ground_truth_base_frame_id" value="$(arg ground_truth_base_frame_id)"/>
  <arg name="namespace"               value="$(arg namespace)"/>
  <arg name="database_path"           value="$(arg database_path)"/>
  <arg name="queue_size"              value="$(arg queue_size)"/>
  <arg name="wait_for_transform"      value="$(arg wait_for_transform)"/>
  <arg name="args"                    value="$(arg args)"/>
  <arg name="rtabmap_args"            value="$(arg rtabmap_args)"/>
  <arg name="gdb"                     value="$(arg gdb)"/>
  <arg name="launch_prefix"           value="$(arg launch_prefix)"/>
  <arg name="clear_params"            value="$(arg clear_params)"/>
  <arg name="output"                  value="$(arg output)"/>
  <arg name="publish_tf_map"          value="$(arg publish_tf_map)"/>

  <arg name="approx_sync"               value="$(arg approx_sync)"/>
  <arg name="approx_sync_max_interval"  value="$(arg approx_sync_max_interval)"/>

  <arg name="rgb_topic"               value="$(arg rgb_topic)" />
  <arg name="depth_topic"             value="$(arg depth_topic)" />
  <arg name="camera_info_topic"       value="$(arg camera_info_topic)" />
  <arg name="depth_camera_info_topic" value="$(arg depth_camera_info_topic)" />

  <arg name="stereo_namespace"        value="$(arg stereo_namespace)"/>
  <arg name="left_image_topic"        value="$(arg left_image_topic)" />
  <arg name="right_image_topic"       value="$(arg right_image_topic)" />
  <arg name="left_camera_info_topic"  value="$(arg left_camera_info_topic)" />
  <arg name="right_camera_info_topic" value="$(arg right_camera_info_topic)" />

  <arg name="rgbd_sync"               value="$(arg rgbd_sync)"/>
  <arg name="approx_rgbd_sync"        value="$(arg approx_rgbd_sync)"/>
  <arg name="subscribe_rgbd"          value="$(arg subscribe_rgbd)"/>
  <arg name="rgbd_topic"              value="$(arg rgbd_topic)" />
  <arg name="depth_scale"             value="$(arg depth_scale)" />
  <arg name="rgbd_depth_scale"        value="$(arg rgbd_depth_scale)" />
  <arg name="rgbd_decimation"         value="$(arg rgbd_decimation)" />

  <arg name="compressed"              value="$(arg compressed)"/>
  <arg name="rgb_image_transport"     value="$(arg rgb_image_transport)"/>
  <arg name="depth_image_transport"   value="$(arg depth_image_transport)"/>

  <arg name="gen_cloud"               value="$(arg gen_cloud)"/>
  <arg name="gen_cloud_decimation"    value="$(arg gen_cloud_decimation)"/>
  <arg name="gen_cloud_voxel"         value="$(arg gen_cloud_voxel)"/>

  <arg name="subscribe_scan"          value="$(arg subscribe_scan)"/>
  <arg name="scan_topic"              value="$(arg scan_topic)"/>
  <arg name="subscribe_scan_cloud"    value="$(arg subscribe_scan_cloud)"/>
  <arg name="scan_cloud_topic"        value="$(arg scan_cloud_topic)"/>
  <arg name="subscribe_scan_descriptor" value="$(arg subscribe_scan_descriptor)"/>
  <arg name="scan_descriptor_topic"   value="$(arg scan_descriptor_topic)"/>
  <arg name="scan_deskewing"          value="$(arg scan_deskewing)"/>
  <arg name="scan_deskewing_slerp"    value="$(arg scan_deskewing_slerp)"/>
  <arg name="scan_cloud_max_points"   value="$(arg scan_cloud_max_points)"/>
  <arg name="scan_cloud_filtered"     value="$(arg scan_cloud_filtered)"/>
  <arg name="gen_scan"                value="$(arg gen_scan)"/>

  <arg name="gen_depth"                  value="$(arg gen_depth)" />
  <arg name="gen_depth_decimation"       value="$(arg gen_depth_decimation)" />
  <arg name="gen_depth_fill_holes_size"  value="$(arg gen_depth_fill_holes_size)" />
  <arg name="gen_depth_fill_iterations"  value="$(arg gen_depth_fill_iterations)" />
  <arg name="gen_depth_fill_holes_error" value="$(arg gen_depth_fill_holes_error)" />

  <arg name="visual_odometry"          value="$(arg visual_odometry)"/>
  <arg name="icp_odometry"             value="$(arg icp_odometry)"/>
  <arg name="odom_topic"               value="$(arg odom_topic)"/>
  <arg name="vo_frame_id"              value="$(arg vo_frame_id)"/>
  <arg name="publish_tf_odom"          value="$(arg publish_tf_odom)"/>
  <arg name="odom_tf_angular_variance" value="$(arg odom_tf_angular_variance)"/>
  <arg name="odom_tf_linear_variance"  value="$(arg odom_tf_linear_variance)"/>
  <arg name="odom_args"                value="$(arg odom_args)"/>
  <arg name="odom_sensor_sync"         value="$(arg odom_sensor_sync)"/>
  <arg name="odom_guess_frame_id"        value="$(arg odom_guess_frame_id)"/>
  <arg name="odom_guess_min_translation" value="$(arg odom_guess_min_translation)"/>
  <arg name="odom_guess_min_rotation"    value="$(arg odom_guess_min_rotation)"/>
  <arg name="odom_max_rate"            value="$(arg odom_max_rate)"/>
  <arg name="odom_expected_rate"       value="$(arg odom_expected_rate)"/>
  <arg name="imu_topic"                value="$(arg imu_topic)"/>
  <arg name="wait_imu_to_init"         value="$(arg wait_imu_to_init)"/>
  <arg name="use_odom_features"        value="$(arg use_odom_features)"/>

  <arg name="scan_cloud_assembling"              value="$(arg scan_cloud_assembling)"/>
  <arg name="scan_cloud_assembling_time"         value="$(arg scan_cloud_assembling_time)"/>
  <arg name="scan_cloud_assembling_max_clouds"   value="$(arg scan_cloud_assembling_max_clouds)"/>
  <arg name="scan_cloud_assembling_fixed_frame"  value="$(arg scan_cloud_assembling_fixed_frame)"/>
  <arg name="scan_cloud_assembling_voxel_size"   value="$(arg scan_cloud_assembling_voxel_size)"/>
  <arg name="scan_cloud_assembling_range_min"    value="$(arg scan_cloud_assembling_range_min)"/>
  <arg name="scan_cloud_assembling_range_max"    value="$(arg scan_cloud_assembling_range_max)"/>
  <arg name="scan_cloud_assembling_noise_radius"   value="$(arg scan_cloud_assembling_noise_radius)"/>
  <arg name="scan_cloud_assembling_noise_min_neighbors"   value="$(arg scan_cloud_assembling_noise_min_neighbors)"/>

  <arg name="subscribe_user_data"      value="$(arg subscribe_user_data)"/>
  <arg name="user_data_topic"          value="$(arg user_data_topic)"/>
  <arg name="user_data_async_topic"    value="$(arg user_data_async_topic)" />

  <arg name="gps_topic"                value="$(arg gps_topic)" />

  <arg name="tag_topic"                value="$(arg tag_topic)" />
  <arg name="tag_linear_variance"      value="$(arg tag_linear_variance)" />
  <arg name="tag_angular_variance"     value="$(arg tag_angular_variance)" />
  <arg name="fiducial_topic"           value="$(arg fiducial_topic)" />

  </include>

</launch>